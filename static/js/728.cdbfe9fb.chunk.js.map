{"version":3,"file":"static/js/728.cdbfe9fb.chunk.js","mappings":"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","sources":["redux/filters/filtersSelectors.ts","redux/search/searchSelectors.ts","redux/pizzas/pizzasSelectors.ts","components/Categories/Categories.tsx","components/Sort/Sort.tsx","components/PizzaBlock/PizzaBlock.tsx","components/PizzaBlock/Skeleton.tsx","pages/HomePage/HomePage.tsx"],"sourcesContent":["import { RootState } from \"../store\";\r\n\r\nexport const selectCategoryId = (state: RootState) => state.filters.categoryId;\r\nexport const selectSort = (state: RootState) => state.filters.sort;\r\n","import { RootState } from \"../store\";\r\n\r\nexport const selectSearchValue = (state: RootState) => state.search.value;\r\n","import { RootState } from \"../store\";\r\n\r\nexport const selectPizzasItems = (state: RootState) => state.pizzas.items;\r\nexport const selectIsLoading = (state: RootState) => state.pizzas.isLoading;\r\nexport const selectError = (state: RootState) => state.pizzas.error;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { selectCategoryId } from \"../../redux/filters/filtersSelectors\";\r\nimport { setCategoryId } from \"../../redux/filters/filtersSlice\";\r\n\r\nconst categories = [\r\n  \"Всі\",\r\n  \"М'ясні\",\r\n  \"Вегетаріанські\",\r\n  \"Гриль\",\r\n  \"Гострі\",\r\n  \"Закриті\",\r\n];\r\n\r\nconst Categories: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const categoryId = useSelector(selectCategoryId);\r\n\r\n  const onChangeCategory = (id: number) => {\r\n    dispatch(setCategoryId(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul>\r\n        {categories.map((item, index) => (\r\n          <li\r\n            onClick={() => {\r\n              onChangeCategory(index);\r\n            }}\r\n            key={index}\r\n            className={categoryId === index ? \"active\" : \"\"}\r\n          >\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectSort } from \"../../redux/filters/filtersSelectors\";\r\nimport { setSortValue } from \"../../redux/filters/filtersSlice\";\r\n\r\nimport { SortType } from \"../../redux/pizzas/pizzasOperations\";\r\n\r\ntype SortItem = {\r\n  name: string;\r\n  sortProperty: \"rating\" | \"title\" | \"price\";\r\n  order: \"desc\" | \"asc\";\r\n};\r\n\r\nconst sortValues: SortItem[] = [\r\n  {\r\n    name: \"популярністю (за зменшенням)\",\r\n    sortProperty: \"rating\",\r\n    order: \"desc\",\r\n  },\r\n  {\r\n    name: \"популярністю (за збільшенням)\",\r\n    sortProperty: \"rating\",\r\n    order: \"asc\",\r\n  },\r\n  {\r\n    name: \"ціною (за зменшенням)\",\r\n    sortProperty: \"price\",\r\n    order: \"desc\",\r\n  },\r\n  {\r\n    name: \"ціною (за збільшенням)\",\r\n    sortProperty: \"price\",\r\n    order: \"asc\",\r\n  },\r\n  {\r\n    name: \"алфавітом (від А до Я)\",\r\n    sortProperty: \"title\",\r\n    order: \"asc\",\r\n  },\r\n  {\r\n    name: \"алфавітом (від Я до А)\",\r\n    sortProperty: \"title\",\r\n    order: \"desc\",\r\n  },\r\n];\r\n\r\nconst Sort: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const sortRef = useRef<HTMLDivElement>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sortValue = useSelector(selectSort);\r\n\r\n  useEffect(() => {\r\n    const onClickOutside = (e: MouseEvent) => {\r\n      const target = e.target as HTMLElement;\r\n      if (target.offsetParent !== sortRef.current) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"click\", onClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", onClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const onSelectValue = (value: SortType) => {\r\n    dispatch(setSortValue(value));\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <div>\r\n          <svg\r\n            width=\"10\"\r\n            height=\"6\"\r\n            viewBox=\"0 0 10 6\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n              fill=\"#2C2C2C\"\r\n            />\r\n          </svg>\r\n          <b>Сортування за:</b>\r\n        </div>\r\n\r\n        <span\r\n          onClick={() => {\r\n            setIsOpen((prev) => !prev);\r\n          }}\r\n        >\r\n          {sortValue.name}\r\n        </span>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"sort__popup\">\r\n          <ul>\r\n            {sortValues.map((obj, index) => (\r\n              <li\r\n                onClick={() => {\r\n                  onSelectValue(obj);\r\n                }}\r\n                key={index}\r\n                className={\r\n                  obj.sortProperty === sortValue.sortProperty &&\r\n                  obj.order === sortValue.order\r\n                    ? \"active\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                {obj.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Sort;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CartItem, addItem } from \"../../redux/cart/cartSlice\";\r\nimport { selectCartItemById } from \"../../redux/cart/cartSelectors\";\r\n\r\ntype PizzaBlockProps = {\r\n  id: string;\r\n  title: string;\r\n  imageUrl: string;\r\n  price: number;\r\n  sizes: number[];\r\n  types: number[];\r\n};\r\n\r\nconst PizzaBlock: React.FC<PizzaBlockProps> = ({\r\n  id,\r\n  title,\r\n  imageUrl,\r\n  price,\r\n  sizes,\r\n  types,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const typeNames = [\"тонке\", \"традиційне\"];\r\n  const findItem = useSelector(selectCartItemById(id));\r\n  const addedCount = findItem ? findItem.count : 0;\r\n\r\n  const [activeType, setActiveType] = useState<number>(0);\r\n  const [activeSize, setActiveSize] = useState<number>(0);\r\n\r\n  const onClickAdd = () => {\r\n    const item: CartItem = {\r\n      id,\r\n      title,\r\n      imageUrl,\r\n      price,\r\n      type: typeNames[activeType],\r\n      size: sizes[activeSize],\r\n      count: 0,\r\n    };\r\n    dispatch(addItem(item));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pizza-block-wrapper\">\r\n      <div className=\"pizza-block\">\r\n        <img\r\n          width=\"260\"\r\n          height=\"260\"\r\n          className=\"pizza-block__image\"\r\n          src={imageUrl}\r\n          alt=\"Pizza\"\r\n        />\r\n        <h4 className=\"pizza-block__title\">{title}</h4>\r\n        <div className=\"pizza-block__selector\">\r\n          <ul>\r\n            {types.map((typeId, index) => (\r\n              <li\r\n                key={index}\r\n                onClick={() => {\r\n                  setActiveType(typeId);\r\n                }}\r\n                className={activeType === index ? \"active\" : \"\"}\r\n              >\r\n                {typeNames[typeId]}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <ul>\r\n            {sizes.map((size, index) => (\r\n              <li\r\n                key={index}\r\n                onClick={() => {\r\n                  setActiveSize(index);\r\n                }}\r\n                className={activeSize === index ? \"active\" : \"\"}\r\n              >\r\n                {size} см.\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"pizza-block__bottom\">\r\n          <div className=\"pizza-block__price\">від {price} ₴</div>\r\n          <button\r\n            onClick={onClickAdd}\r\n            type=\"button\"\r\n            className=\"button button--outline button--add\"\r\n          >\r\n            <svg\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 12 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            <span>Додати</span>\r\n            {addedCount > 0 && <i>{addedCount}</i>}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PizzaBlock;\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst Skeleton: React.FC = () => (\r\n  <div className=\"pizza-block-wrapper\">\r\n    <ContentLoader\r\n      className=\"pizza-block\"\r\n      speed={2}\r\n      width={280}\r\n      height={466}\r\n      viewBox=\"0 0 280 466\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n    >\r\n      <circle cx=\"132\" cy=\"124\" r=\"124\" />\r\n      <rect x=\"1\" y=\"265\" rx=\"9\" ry=\"9\" width=\"280\" height=\"27\" />\r\n      <rect x=\"2\" y=\"312\" rx=\"10\" ry=\"10\" width=\"280\" height=\"89\" />\r\n      <rect x=\"2\" y=\"429\" rx=\"10\" ry=\"10\" width=\"100\" height=\"27\" />\r\n      <rect x=\"128\" y=\"419\" rx=\"30\" ry=\"30\" width=\"152\" height=\"45\" />\r\n    </ContentLoader>\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import React from \"react\";\r\nimport qs from \"qs\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setFilters } from \"../../redux/filters/filtersSlice\";\r\nimport { SortType, fetchPizzas } from \"../../redux/pizzas/pizzasOperations\";\r\nimport {\r\n  selectCategoryId,\r\n  selectSort,\r\n} from \"../../redux/filters/filtersSelectors\";\r\nimport { selectSearchValue } from \"../../redux/search/searchSelectors\";\r\nimport {\r\n  selectPizzasItems,\r\n  selectIsLoading,\r\n  selectError,\r\n} from \"../../redux/pizzas/pizzasSelectors\";\r\n\r\nimport Categories from \"../../components/Categories/Categories\";\r\nimport Sort from \"../../components/Sort\";\r\nimport PizzaBlock from \"../../components/PizzaBlock/PizzaBlock\";\r\nimport Skeleton from \"../../components/PizzaBlock/Skeleton\";\r\nimport { useAppDispatch } from \"../../redux/store\";\r\n\r\ntype Item = {\r\n  id: string;\r\n  title: string;\r\n  imageUrl: string;\r\n  price: number;\r\n  sizes: number[];\r\n  types: number[];\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isSearchParams = useRef(false);\r\n  const isMounted = useRef(false);\r\n\r\n  const categoryId = useSelector(selectCategoryId);\r\n  const sortValue = useSelector(selectSort);\r\n  const searchValue = useSelector(selectSearchValue);\r\n  const items: Item[] = useSelector(selectPizzasItems);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const getPizzas = async (\r\n    categoryId: number,\r\n    sortValue: SortType,\r\n    searchValue: string\r\n  ) => {\r\n    dispatch(fetchPizzas({ categoryId, sortValue, searchValue }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      const queryString = qs.stringify({\r\n        categoryId,\r\n        sort: sortValue,\r\n      });\r\n\r\n      navigate(`?${queryString}`);\r\n    }\r\n\r\n    isMounted.current = true;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryId, sortValue, searchValue]);\r\n\r\n  useEffect(() => {\r\n    const queryString = window.location.search;\r\n    if (queryString) {\r\n      const params = qs.parse(queryString.substring(1));\r\n      //@ts-ignore\r\n      dispatch(setFilters(params));\r\n\r\n      isSearchParams.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isSearchParams.current) {\r\n      getPizzas(categoryId, sortValue, searchValue);\r\n      window.scrollTo(0, 0);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryId, sortValue, searchValue]);\r\n\r\n  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);\r\n  const skeletons = [...new Array(8)].map((_, index) => (\r\n    <Skeleton key={index} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content__top\">\r\n        <Categories />\r\n        <Sort />\r\n      </div>\r\n      <h2 className=\"content__title\">Всі піци</h2>\r\n\r\n      {error ? (\r\n        <div className=\"content__error-info\">\r\n          <h2>Виникла помилка 😕</h2>\r\n          <p>\r\n            На жаль, не вдалося одержати піци. Спробуйте повторити спробу\r\n            пізніше.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"content__items\">\r\n          {isLoading ? (\r\n            skeletons\r\n          ) : items.length > 0 ? (\r\n            pizzas\r\n          ) : (\r\n            <div className=\"content__error-info\">\r\n              <p>На жаль, за Вашим запитом не знайдено піц.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["selectCategoryId","state","filters","categoryId","selectSort","sort","selectSearchValue","search","value","selectPizzasItems","pizzas","items","selectIsLoading","isLoading","selectError","error","categories","dispatch","useDispatch","useSelector","_jsx","className","children","map","item","index","onClick","id","setCategoryId","sortValues","name","sortProperty","order","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","sortRef","useRef","sortValue","useEffect","onClickOutside","e","target","offsetParent","current","document","addEventListener","removeEventListener","_jsxs","ref","width","height","viewBox","fill","xmlns","d","prev","obj","setSortValue","_ref","title","imageUrl","price","sizes","types","typeNames","findItem","selectCartItemById","addedCount","count","activeType","setActiveType","_useState3","_useState4","activeSize","setActiveSize","src","alt","typeId","size","type","addItem","ContentLoader","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","navigate","useNavigate","useAppDispatch","isSearchParams","isMounted","searchValue","getPizzas","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","fetchPizzas","stop","_x","_x2","_x3","apply","arguments","queryString","qs","concat","window","location","params","substring","setFilters","scrollTo","PizzaBlock","_objectSpread","skeletons","_toConsumableArray","Array","_","Skeleton","_Fragment","Categories","Sort","length"],"sourceRoot":""}